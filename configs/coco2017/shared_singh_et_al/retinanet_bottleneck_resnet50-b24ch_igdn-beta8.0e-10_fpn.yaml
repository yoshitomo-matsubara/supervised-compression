datasets:
  coco2017:
    name: &dataset_name 'coco2017'
    type: 'cocodetect'
    root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &coco_train !join [*dataset_name, '/train']
        images: !join [*root_dir, '/train2017']
        annotations: !join [*root_dir, '/annotations/instances_train2017.json']
        annotated_only: True
        random_horizontal_flip: 0.5
      val:
        dataset_id: &coco_val !join [*dataset_name, '/val']
        images: !join [*root_dir, '/val2017']
        annotations: !join [*root_dir, '/annotations/instances_val2017.json']
        annotated_only: False

models:
  model:
    name: &student_model_name 'retinanet_bottleneck_resnet_fpn'
    params:
      pretrained: True
      progress: True
      num_classes: 91
      trainable_backbone_layers: 4
      backbone:
        name: 'BottleneckResNetBackbone'
        params:
          bottleneck_config:
            name: 'BottleneckResNetLayerWithIGDN'
            params:
              num_enc_channels: &bch 24
              num_target_channels: 256
              analysis_config:
                mean_std_file_size: True
        base_model_name: 'resnet50'
        base_model_config:
          num_classes: 1000
          pretrained: True
          norm_layer: 'FrozenBatchNorm2d'
        update: True
        ckpt: !join ['./resource/ckpt/ilsvrc2012/singh_et_al/ilsvrc2012-bottleneck_resnet50-b', *bch, 'ch_igdn-beta8.0e-10.pt']
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_name, '-b', *bch, 'ch_igdn-beta8.0e-10']
    ckpt: !join ['./resource/ckpt/coco2017/shared_singh_et_al/', *student_experiment, '.pt']

train:
  log_freq: 1000
  epoch_to_update: 0
  num_epochs: 5
  train_data_loader:
    dataset_id: *coco_train
    random_sample: True
    num_workers: 8
    batch_sampler:
      type: 'GroupedBatchSampler'
      params:
        aspect_ratio_group_factor: 3
        batch_size: 4
    collate_fn: 'coco_collate_fn'
    cache_output:
  val_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 4
    collate_fn: 'coco_collate_fn'
  model:
    forward_proc: 'forward_batch_target'
    adaptations:
    sequential: []
    frozen_modules: ['backbone.body.bottleneck_layer.encoder', 'backbone.body.bottleneck_layer.entropy_bottleneck']
    forward_hook:
      input: []
      output: []
    wrapper: 'DistributedDataParallel'
    requires_grad: True
  apex:
    requires: False
    opt_level: '01'
  optimizer:
    type: 'SGD'
    params:
      lr: 0.0001
      momentum: 0.9
      weight_decay: 0.0001
  scheduler:
    type: 'MultiStepLR'
    params:
      milestones: [3]
      gamma: 0.1
  criterion:
    type: 'GeneralizedCustomLoss'
    func2extract_org_loss: 'extract_org_loss_dict'
    org_term:
      factor: 1.0
    sub_terms:

test:
  test_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 4
    collate_fn: 'coco_collate_fn'
