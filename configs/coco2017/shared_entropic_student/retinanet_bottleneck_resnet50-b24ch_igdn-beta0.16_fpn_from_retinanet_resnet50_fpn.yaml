datasets:
  coco2017:
    name: &dataset_name 'coco2017'
    type: 'cocodetect'
    root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &coco_train !join [*dataset_name, '/train']
        images: !join [*root_dir, '/train2017']
        annotations: !join [*root_dir, '/annotations/instances_train2017.json']
        annotated_only: True
        random_horizontal_flip: 0.5
      val:
        dataset_id: &coco_val !join [*dataset_name, '/val']
        images: !join [*root_dir, '/val2017']
        annotations: !join [*root_dir, '/annotations/instances_val2017.json']
        annotated_only: False

models:
  teacher_model:
    name: &teacher_model_name 'retinanet_resnet50_fpn'
    params:
      pretrained: True
      progress: True
      num_classes: 91
      pretrained_backbone: True
    experiment: &teacher_experiment !join [*dataset_name, '-', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/coco2017/teacher/', *teacher_experiment, '.pt']
  student_model:
    name: &student_model_name 'retinanet_bottleneck_resnet_fpn'
    params:
      pretrained: True
      progress: True
      num_classes: 91
      trainable_backbone_layers: 4
      backbone:
        name: 'BottleneckResNetBackbone'
        params:
          bottleneck_config:
            name: 'BottleneckResNetLayerWithIGDN'
            params:
              num_enc_channels: &bch 24
              num_target_channels: 256
              analysis_config:
                mean_std_file_size: True
        base_model_name: 'resnet50'
        base_model_config:
          num_classes: 1000
          pretrained: True
          norm_layer: 'FrozenBatchNorm2d'
        update: True
        ckpt: !join ['./resource/ckpt/ilsvrc2012/entropic_student/ilsvrc2012-bottleneck_resnet50-b', *bch, 'ch_igdn-beta0.16_from_resnet50.pt']
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_name, '-b', *bch, 'ch_igdn-beta0.16_from_', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/coco2017/shared_entropic_student/', *student_experiment, '.pt']

train:
  log_freq: 1000
  epoch_to_update: 0
  stage1:
    num_epochs: 3
    train_data_loader:
      dataset_id: *coco_train
      random_sample: True
      num_workers: 16
      batch_sampler:
        type: 'GroupedBatchSampler'
        params:
          aspect_ratio_group_factor: 3
          batch_size: 6
      collate_fn: 'coco_collate_fn'
      cache_output:
    val_data_loader:
      dataset_id: *coco_val
      random_sample: False
      batch_size: 1
      num_workers: 16
      collate_fn: 'coco_collate_fn'
    teacher:
      forward_proc: 'forward_batch'
      sequential: []
      special:
        type: 'HeadRCNN'
        params:
          head_rcnn:
            sequential: ['backbone.body']
      frozen_modules: []
      forward_hook:
        input: []
        output: ['seq.backbone.body.layer1', 'seq.backbone.body.layer2', 'seq.backbone.body.layer3', 'seq.backbone.body.layer4']
      wrapper: 'DistributedDataParallel'
      requires_grad: False
    student:
      forward_proc: 'forward_batch'
      adaptations:
      sequential: []
      special:
        type: 'HeadRCNN'
        params:
          head_rcnn:
            sequential: ['backbone.body']
      frozen_modules: ['seq.backbone.body.bottleneck_layer.encoder', 'seq.backbone.body.bottleneck_layer.entropy_bottleneck', 'seq.backbone.body.layer3', 'seq.backbone.body.layer4']
      forward_hook:
        input: []
        output: ['seq.backbone.body.bottleneck_layer', 'seq.backbone.body.layer2', 'seq.backbone.body.layer3', 'seq.backbone.body.layer4']
      wrapper: 'DistributedDataParallel'
      requires_grad: True
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'Adam'
      params:
        lr: 0.001
    scheduler:
      type: 'MultiStepLR'
      params:
        milestones: [2]
        gamma: 0.1
    criterion:
      type: 'GeneralizedCustomLoss'
      org_term:
        factor: 0.0
      sub_terms:
        layer1:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'seq.backbone.body.bottleneck_layer'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'seq.backbone.body.layer1'
              io: 'output'
          factor: 1.0
        layer2:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'seq.backbone.body.layer2'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'seq.backbone.body.layer2'
              io: 'output'
          factor: 1.0
        layer3:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'seq.backbone.body.layer3'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'seq.backbone.body.layer3'
              io: 'output'
          factor: 1.0
        layer4:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'seq.backbone.body.layer4'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'seq.backbone.body.layer4'
              io: 'output'
          factor: 1.0
  stage2:
    num_epochs: 2
    train_data_loader:
      dataset_id: *coco_train
      random_sample: True
      num_workers: 16
      batch_sampler:
        type: 'GroupedBatchSampler'
        params:
          aspect_ratio_group_factor: 3
          batch_size: 3
      collate_fn: 'coco_collate_fn'
      cache_output:
    teacher:
      forward_proc: 'forward_batch_target'
      special:
        type: 'EmptyModule'
        params:
      sequential: []
      forward_hook:
        input: []
        output: []
      wrapper:
      requires_grad: False
    student:
      forward_proc: 'forward_batch_target'
      adaptations:
      sequential: []
      frozen_modules: ['backbone.body.bottleneck_layer.encoder', 'backbone.body.bottleneck_layer.entropy_bottleneck']
      forward_hook:
        input: []
        output: []
      wrapper: 'DistributedDataParallel'
      requires_grad: True
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'SGD'
      params:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      type: 'MultiStepLR'
      params:
        milestones: [1]
        gamma: 0.1
    criterion:
      type: 'GeneralizedCustomLoss'
      func2extract_org_loss: 'extract_org_loss_dict'
      org_term:
        factor: 1.0
      sub_terms:

test:
  test_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'coco_collate_fn'
